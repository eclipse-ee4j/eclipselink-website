<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta http-equiv="Content-Style-Type" content="text/css" />
<meta http-equiv="Content-Script-Type" content="text/javascript" />
<title>Object-Relational Mapping Concepts | EclipseLink 2.4.x Understanding EclipseLink</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 1.0.11" />
<meta name="date" content="2013-05-13T7:43:46Z" />
<meta name="robots" content="noarchive" />
<meta name="doctitle" content="Object-Relational Mapping Concepts" />
<meta name="relnum" content="2.5" />
<link rel="stylesheet" type="text/css" href="../../dcommon/style.css" media="screen" />
<link rel="copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />
<link rel="start" href="../../index.htm" title="Home" type="text/html" />
<link rel="contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="prev" href="mappingintro001.htm" title="Previous" type="text/html" />
<link rel="next" href="mappingintro003.htm" title="Next" type="text/html" />
<!-- START: Disqus --><script type="text/javascript">  var disqus_developer = 0; </script><!-- END: Disqus --><!-- START: Sharethis --><script type="text/javascript">var switchTo5x=true;</script><script type="text/javascript" src="http://w.sharethis.com/button/buttons.js"></script><script type="text/javascript" src="http://s.sharethis.com/loader.js"></script> <!-- END: Sharethis --></head>
<body bgcolor="#FFFFFF"><iframe id="docheader" frameborder="0" framemargin="0" scrolling="no" src="../../dcommon/header.html"></iframe><div id="cse-search-form" style="width: 100%;"><span class="loadingspin">Loading</span></div><script src="http://www.google.com/jsapi" type="text/javascript"></script><script type="text/javascript">   google.load('search', '1', {language : 'en'});  google.setOnLoadCallback(function() {    var customSearchOptions = {};    var googleAnalyticsOptions = {};    googleAnalyticsOptions['queryParameter'] = 'q';    googleAnalyticsOptions['categoryParameter'] = '';    customSearchOptions['googleAnalyticsOptions'] = googleAnalyticsOptions;  var customSearchControl = new google.search.CustomSearchControl(      '016171230611334810008:mdbgdwjv8zu', customSearchOptions);    customSearchControl.setResultSetSize(google.search.Search.FILTERED_CSE_RESULTSET);    var options = new google.search.DrawOptions();    options.setSearchFormRoot('cse-search-form');    customSearchControl.draw('cse', options);  }, true);</script><link rel="stylesheet" href="http://www.google.com/cse/style/look/default.css" type="text/css" /><div id="cse" style="width:100%;"></div> 
<div class="header"><a id="top" name="top"></a>
<table class="simple oac_no_warn" summary="" cellspacing="0" cellpadding="0" width="100%">
<tr>
<td align="left" valign="top"><div class="booktitle">Understanding EclipseLink, 
<b>2.5</b><br /></font></td>
<td valign="bottom" align="right" width="144">
<table class="simple oac_no_warn" summary="" cellspacing="0" cellpadding="0" width="100%">
<tr>
<td>&nbsp;</td>
<td align="center" valign="top"><a href="toc.htm"><img src="../../dcommon/images/contents.png" alt="Go To Table Of Contents" border="0" height="16" width="16" /><br />
<span class="mini">Contents</span></a></td><td>&nbsp;</td><td align="center"><a href="../../" target="_top" class="external text" title="Other searches" rel="nofollow"><img src="../../dcommon/images/search.png" alt="Search" style="border:0;" /><br /><span class="mini">Other&nbsp;Searches</span></a></td><td>&nbsp;</td><td align="center"><a href="../eclipselink_otlcg.pdf" title="PDF" target="_blank"><img src="../../dcommon/images/pdf_icon.png" style="padding-right:5px;border:0" alt="PDF"><br /><span class="mini">PDF</span></a></td><td align="center"><a href="#disqus_thread" title="Comments""><img src="../../dcommon/images/comments.png" style="padding-right:5px;border:0" alt="Comments"><br /><span class="mini">Comments</span></a>
</tr>
</table>
</td>
</tr>
</table>
<hr />
<table class="navigation simple oac_no_warn" summary="" cellspacing="0" cellpadding="0" width="100" align="center">
<tr>
<td align="center"><a href="mappingintro001.htm"><img src="../../dcommon/images/larrow.png" alt="Previous" border="0" height="16" width="16" /></a></td>
<td align="center"><a href="mappingintro003.htm"><img src="../../dcommon/images/rarrow.png" alt="Next" border="0" height="16" width="16" /></a></td>
<td>&nbsp;</td>
</tr>
</table>
</div>
<!-- class="header" -->
<div class="ind"><!-- End Header -->
<p align="center"><font color="#FF0000">Beta Draft: 2013-05-13</font></p>
<a id="CEGDCCDH" name="CEGDCCDH"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" -->
<h1 class="sect1"><font face="arial, helvetica, sans-serif" color="#330099">Object-Relational Mapping Concepts</font></h1>
<p>This section describes concepts for relational mappings that are unique to EclipseLink:</p>
<ul>
<li>
<p><a href="#CHDJAHDC">Indirection (Lazy Loading)</a></p>
</li>
<li>
<p><a href="#CEGHBHEA">Value Holder Indirection</a></p>
</li>
<li>
<p><a href="#CEGGCCGA">Transparent Indirection</a></p>
</li>
<li>
<p><a href="#CEGDCAIG">Proxy Indirection</a></p>
</li>
<li>
<p><a href="#CHDBJGII">Weaved Indirection</a></p>
</li>
<li>
<p><a href="#CHDJIGEI">Indirection and JPA</a></p>
</li>
<li>
<p><a href="#CHDEEIBD">Indirection, Serialization, and Detachment</a></p>
</li>
</ul>
<a id="CHDJAHDC" name="CHDJAHDC"></a><a id="OTLCG00083" name="OTLCG00083"></a>
<div class="sect2"><!-- infolevel="all" infotype="General" -->
<h2 class="sect2"><font face="arial, helvetica, sans-serif" color="#330099">Indirection (Lazy Loading)</font></h2>
<p>By default, when EclipseLink retrieves a persistent object, it retrieves all of the dependent objects to which it refers. When you configure indirection (also known as lazy reading, lazy loading, and just-in-time reading) for an attribute mapped with a relationship mapping, EclipseLink uses an indirection object as a place holder for the referenced object: EclipseLink defers reading the dependent object until you access that specific attribute. This can result in a significant performance improvement, especially if the application is interested only in the contents of the retrieved object, rather than the objects to which it is related.</p>
<p>Oracle strongly recommends using indirection for all relationship mappings. Not only does this lets you optimize data source access, but it also allows EclipseLink to optimize the unit of work processing, cache access, and concurrency.</p>
<div align="center">
<div class="inftblnote"><br />
<table class="Note oac_no_warn" summary="" border="1" width="80%" frame="hsides" rules="groups" cellpadding="3" cellspacing="0">
<tbody>
<tr>
<td align="left">
<p class="note"><img src="../../dcommon/images/note_icon.png" width="16" height="16" alt="Note" style="vertical-align:middle;padding-right:5px;" />Note:</p>
<p>The use of indirection is especially important for providing a proper maintenance of bidirectional relationships. In this case, you must use indirection. If you are operating with collections, you must use transparent indirection (see <a href="#CEGGCCGA">Transparent Indirection</a>).</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblnote" --></div>
<p><a href="#i1102721">Figure 7-8</a> shows an indirection example. Without indirection, reading the <code>Order</code> object also reads the dependent collection of <code>LineItem</code> objects. With indirection, reading the <code>Order</code> object does not read the dependent collection of <code>LineItem</code> objects: the <code>lineItems</code> attribute refers to an indirection object. You can access other attributes (such as <code>customerId</code>), but EclipseLink reads the dependent <code>LineItem</code> objects only if and when you access the <code>lineItems</code> attribute.</p>
<div class="figure"><a id="i1102721" name="i1102721"></a><a id="OTLCG92106" name="OTLCG92106"></a>
<p><strong><em><font face="arial, helvetica, sans-serif">Figure 7-8 EclipseLink Indirection</font></em></strong></p>
<img src="img/indirctn.gif" alt="Description of Figure 7-8 follows" title="Description of Figure 7-8 follows" longdesc="img_text/indirctn.htm" /><br />
<a id="sthref48" name="sthref48" href="img_text/indirctn.htm">Description of "Figure 7-8 EclipseLink Indirection"</a><br />
<br /></div>
<!-- class="figure" -->
<p>EclipseLink supports the following types of indirection:</p>
<ul>
<li>
<p><a href="#CEGHBHEA">Value Holder Indirection</a></p>
</li>
<li>
<p><a href="#CEGGCCGA">Transparent Indirection</a></p>
</li>
<li>
<p><a href="#CEGDCAIG">Proxy Indirection</a></p>
</li>
</ul>
<p>When using indirection with an object that your application serializes, you must consider the effect of any untriggered indirection objects at deserialization time. See <a href="#CHDEEIBD">Indirection, Serialization, and Detachment</a>.</p>
</div>
<!-- class="sect2" -->
<a id="CEGHBHEA" name="CEGHBHEA"></a><a id="OTLCG92107" name="OTLCG92107"></a>
<div class="sect2">
<h2 class="sect2"><font face="arial, helvetica, sans-serif" color="#330099">Value Holder Indirection</font></h2>
<p>Persistent classes that use indirection must replace relationship attributes with value holder attributes. A value holder is an instance of a class that implements the <code>ValueHolderInterface</code> interface, such as <code>ValueHolder</code>. This object stores the information necessary to retrieve the object it is replacing from the database. If the application does not access the value holder, the replaced object is never read from the database.</p>
<p>To obtain the object that the value holder replaces, use the <code>getValue</code> and <code>setValue</code> methods of the <code>ValueHolderInterface</code>. A convenient way of using these methods is to hide the <code>getValue</code> and <code>setValue</code> methods of the <code>ValueHolderInterface</code> inside <code>get</code> and <code>set</code> methods, as shown in the following illustrations.</p>
<p><a href="#i1102743">Figure 7-9</a> shows the <code>Employee</code> object being read from the database. The <code>Address</code> object is not read and will not be created unless it is accessed.</p>
<div class="figure"><a id="i1102743" name="i1102743"></a><a id="OTLCG92108" name="OTLCG92108"></a>
<p><strong><em><font face="arial, helvetica, sans-serif">Figure 7-9 Address Object Not Read</font></em></strong></p>
<img src="img/vhstep1.gif" alt="Description of Figure 7-9 follows" title="Description of Figure 7-9 follows" longdesc="img_text/vhstep1.htm" /><br />
<a id="sthref49" name="sthref49" href="img_text/vhstep1.htm">Description of "Figure 7-9 Address Object Not Read"</a><br />
<br /></div>
<!-- class="figure" -->
<p>The first time the address is accessed, as in <a href="#i1102751">Figure 7-10</a>, the <code>ValueHolder</code> reads and returns the <code>Address</code> object.</p>
<div class="figure"><a id="i1102751" name="i1102751"></a><a id="OTLCG92109" name="OTLCG92109"></a>
<p><strong><em><font face="arial, helvetica, sans-serif">Figure 7-10 Initial Request</font></em></strong></p>
<img src="img/vhstep2.gif" alt="Description of Figure 7-10 follows" title="Description of Figure 7-10 follows" longdesc="img_text/vhstep2.htm" /><br />
<a id="sthref50" name="sthref50" href="img_text/vhstep2.htm">Description of "Figure 7-10 Initial Request"</a><br />
<br /></div>
<!-- class="figure" -->
<p>Subsequent requests for the address do not access the database, as shown in <a href="#i1102759">Figure 7-11</a>.</p>
<div class="figure"><a id="i1102759" name="i1102759"></a><a id="OTLCG92110" name="OTLCG92110"></a>
<p><strong><em><font face="arial, helvetica, sans-serif">Figure 7-11 Subsequent Requests</font></em></strong></p>
<img src="img/vhstep3.gif" alt="Description of Figure 7-11 follows" title="Description of Figure 7-11 follows" longdesc="img_text/vhstep3.htm" /><br />
<a id="sthref51" name="sthref51" href="img_text/vhstep3.htm">Description of "Figure 7-11 Subsequent Requests"</a><br />
<br /></div>
<!-- class="figure" -->
<p>If you are using method access, the get and set methods specified in the mapping must access the instance of <code>ValueHolderInterface</code>, rather than the object referenced by the value holder. The application should not use these getter and setter, but use the getter and setter that hide the usage of value holders, for example:</p>
<pre xml:space="preserve" class="oac_no_warn">
public class Employee {
 
   private ValueHolderInterface addressValueHolder;
 
   // Use this get/set pair when configuring your Mapping
   public void setAddressValueHolder(ValueHolderInterface value) {
      this.addressValueHolder = value;
   }
   public ValueHolderInterface getAddressValueHolder() {
      return this.addressValueHolder;
   }
 
   // Your application uses these methods to interact with Addresses
   public void setAddress(Address address) {
      this.addressValueHolder.setValue(address);
   }
   public Address getAddress() {
      return this.addressValueHolder.getValue(address);
   }
 
}
</pre></div>
<!-- class="sect2" -->
<a id="CEGGCCGA" name="CEGGCCGA"></a><a id="OTLCG92112" name="OTLCG92112"></a>
<div class="sect2">
<h2 class="sect2"><font face="arial, helvetica, sans-serif" color="#330099">Transparent Indirection</font></h2>
<p>Transparent indirection lets you declare any relationship attribute of a persistent class that holds a collection of related objects as any of the following:</p>
<ul>
<li>
<p><code>java.util.Collection</code></p>
</li>
<li>
<p><code>java.util.Hastable</code></p>
</li>
<li>
<p><code>java.util.List</code></p>
</li>
<li>
<p><code>java.util.Map</code></p>
</li>
<li>
<p><code>java.util.Set</code></p>
</li>
<li>
<p><code>java.util.Vector</code></p>
</li>
</ul>
<p>EclipseLink will use an indirection object that implements the appropriate interface and also performs just-in-time reading of the related objects. When using transparent indirection, you do not have to declare the attributes as <code>ValueHolderInterface</code>.</p>
<p>Newly created collection mappings use transparent indirection by default if their attribute <em>is not</em> a <code>ValueHolderInterface</code>.</p>
<p>You can configure EclipseLink to automatically weave transparent indirect container indirection for JPA entities and Plain Old Java Object (POJO) classes. For more information, see <a href="app_dev003.htm#CCHGGAGE">Using Java Byte-code Weaving</a> and <a href="app_dev007.htm#CCHJEDFH">About Weaving.</a></p>
</div>
<!-- class="sect2" -->
<a id="CEGDCAIG" name="CEGDCAIG"></a><a id="OTLCG92114" name="OTLCG92114"></a>
<div class="sect2">
<h2 class="sect2"><font face="arial, helvetica, sans-serif" color="#330099">Proxy Indirection</font></h2>
<p>The Java class <code>Proxy</code> lets you use dynamic proxy objects as place-holders for a defined interface. Certain EclipseLink mappings can be configured to use proxy indirection, which gives you the benefits of indirection without the need to include EclipseLink classes in your domain model. Proxy indirection is to one-to-one relationship mappings as indirect containers are to collection mappings.</p>
<p>To use proxy indirection, your domain model must satisfy all of the following criteria:</p>
<ul>
<li>
<p>The target class of the one-to-one relationship must implement a public interface.</p>
</li>
<li>
<p>The one-to-one attribute on the source class must be of the <code>interface</code> type.</p>
</li>
<li>
<p>If you employ method accessing, then the getter and setter methods must use the interface.</p>
</li>
</ul>
<p>Before using proxy indirection, be aware of the restrictions it places on how you use the unit of work (see <a href="#CEGGDDJB">Proxy Indirection Restrictions</a>).</p>
<p>To configure proxy indirection, you can use JDeveloper or Java in an amendment method.</p>
<a id="CEGGDDJB" name="CEGGDDJB"></a><a id="OTLCG92115" name="OTLCG92115"></a>
<div class="sect3">
<h3 class="sect3"><font face="arial, helvetica, sans-serif" color="#330099">Proxy Indirection Restrictions</font></h3>
<p>Proxy objects in Java are only able to intercept messages sent. If a primitive operation such as <code>==</code>, <code>instanceof</code>, or <code>getClass</code> is used on a proxy, it will not be intercepted. This limitation can require the application to be somewhat aware of the usage of proxy objects.</p>
<p>You cannot register the target of a proxy indirection implementation with a unit of work. Instead, first register the source object with the unit of work. This lets you retrieve a target object clone with a call to a getter on the source object clone.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="CHDBJGII" name="CHDBJGII"></a><a id="OTLCG92116" name="OTLCG92116"></a>
<div class="sect2">
<h2 class="sect2"><font face="arial, helvetica, sans-serif" color="#330099">Weaved Indirection</font></h2>
<p>For JPA entities or POJO classes that you configure for weaving, EclipseLink weaves value holder indirection for one-to-one mappings. If you want EclipseLink to weave change tracking and your application includes collection mappings (one-to-many or many-to-many), then you must configure all collection mappings to use transparent indirect container indirection only (you may not configure your collection mappings to use eager loading nor value holder indirection).</p>
<p>For more information, see <a href="app_dev003.htm#CCHGGAGE">Using Java Byte-code Weaving</a>.</p>
</div>
<!-- class="sect2" -->
<a id="CHDJIGEI" name="CHDJIGEI"></a><a id="OTLCG92117" name="OTLCG92117"></a>
<div class="sect2">
<h2 class="sect2"><font face="arial, helvetica, sans-serif" color="#330099">Indirection and JPA</font></h2>
<p>When you set mapping annotation attribute <code>fetch</code> to <code>lazy</code>, the EclipseLink JPA persistence provider uses indirection.</p>
<p>By default, one-to-many and many-to-many relationships are lazy and use transparent indirection, while one-to-one and many-to-one relationships are not lazy.</p>
<p>If you set one-to-one or many-to-one relationships to lazy, and you enable weaving, the EclipseLink JPA persistence provider will use weaving to enable value holder indirection for these relationships.</p>
<p>For more information, see the following:</p>
<ul>
<li>
<p><a href="#CHDBJGII">Weaved Indirection</a></p>
</li>
<li>
<p><a href="app_dev003.htm#CCHGGAGE">Using Java Byte-code Weaving</a></p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<a id="CHDEEIBD" name="CHDEEIBD"></a><a id="OTLCG92119" name="OTLCG92119"></a>
<div class="sect2">
<h2 class="sect2"><font face="arial, helvetica, sans-serif" color="#330099">Indirection, Serialization, and Detachment</font></h2>
<p>When using indirection (lazy loading), it is likely that a graph of persistent objects will contain untriggered indirection objects. Because indirection objects are transient and do not survive serialization between one JVM and another, untriggered indirection objects will trigger an error if the relationship is accessed after deserialization.</p>
<p>The application must ensure that any indirect relationships that will be required after deserialization have been instantiated before serialization. This can be done through accessing the get method for any relationship using <code>ValueHolder</code> or weaved indirection, and by calling the <code>size</code> method to any relationship using transparent indirection. If the application desired the relationships to be always instantiated on serialization, you could overwrite the serialization <code>writeObject</code> method in the persistent class to first instantiate the desired relationships. Use caution for objects with many or deep relationships to avoid serializing large object graphs: ideally, only the relationships required by the client should be instantiated.</p>
<p>When serializing JPA entities, any lazy relationships that have not been instantiated prior to serialization will trigger errors if they are accessed. If weaving is used on the server, and the entities are serialized to a client, the same weaved classes must exist on the client, either through static weaving of the jar, or through launching the client JVM using the EclipseLink agent.</p>
<p>For more information, see <a href="app_dev003.htm#CCHGGAGE">Using Java Byte-code Weaving</a>.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
<div class="footer">
<hr />
<table class="simple oac_no_warn" summary="" cellspacing="0" cellpadding="0" width="100%">
<col width="33%" />
<col width="*" />
<col width="33%" />
<tr>
<td valign="bottom">
<table class="navigation simple oac_no_warn" summary="" cellspacing="0" cellpadding="0" width="100" align="center">
<col width="*" />
<col width="48%" />
<col width="48%" />
<tr>
<td>&nbsp;</td>
<td align="center"><a href="mappingintro001.htm"><img src="../../dcommon/images/larrow.png" alt="Previous" border="0" height="16" width="16" /></a></td>
<td align="center"><a href="mappingintro003.htm"><img src="../../dcommon/images/rarrow.png" alt="Next" border="0" height="16" width="16" /></a></td>
</tr>
</table>
</td>
<td align="center" width="34%"><a href="http://www.eclipse.org/eclipselink/" title="EclipseLink home"><img src="../../dcommon/images/ellogo.png" alt="EclipseLink" width="150" border="0" /></a><br />
<font size="-2">Copyright&nbsp;&copy;&nbsp;,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.</font> <a href="../../dcommon/html/cpyr.htm"><br />
  
<td valign="bottom" align="right">
<table class="simple oac_no_warn" summary="" cellspacing="0" cellpadding="0" width="225">
<tr>
<td>&nbsp;</td>
<td align="center" valign="top"><a href="toc.htm"><img src="../../dcommon/images/contents.png" alt="Go To Table Of Contents" border="0" height="16" width="16" /><br />
<span class="mini">Contents</span></a></td><td>&nbsp;</td><td align="center"><a href="../../" target="_top" class="external text" title="Other searches" rel="nofollow"><img src="../../dcommon/images/search.png" alt="Search" style="border:0;" /><br /><span class="mini">Other&nbsp;Searches</span></a></td><td>&nbsp;</td><td align="center"><a href="../eclipselink_otlcg.pdf" title="PDF" target="_blank"><img src="../../dcommon/images/pdf_icon.png" style="padding-right:5px;border:0" alt="PDF"><br /><span class="mini">PDF</span></a></td><td align="center"><a href="#disqus_thread" title="Comments""><img src="../../dcommon/images/comments.png" style="padding-right:5px;border:0" alt="Comments"><br /><span class="mini">Comments</span></a>
</tr>
</table>
</td>
</tr>
</table>
</div>
<!-- class="footer" -->
<div id="copyright">Copyright &copy; 2012 by The Eclipse Foundation under the <a href="http://www.eclipse.org/org/documents/epl-v10.php">Eclipse Public License (EPL)</a><br /> <script type="text/javascript">var LastUpdated = document.lastModified;document.writeln ("Updated: " + LastUpdated);</script> </div><!-- START: Analytics --><script type="text/javascript">		  var _gaq = _gaq || [];		  _gaq.push(['_setAccount', 'UA-1608008-2']);		  _gaq.push(['_trackPageview']);				  (function() {		    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;		    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';		    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);		  })();				</script><!-- END: Analytics --><!-- START: Sharethis --><script>var options={ "publisher": "e2fe9e07-fab6-4f84-83ea-0991b429842c", "position": "right", "ad": { "visible": false, "openDelay": 5, "closeDelay": 0}};var st_hover_widget = new sharethis.widgets.hoverbuttons(options);</script><!-- END: Sharethis --><!-- START: Disqus --><div id="disqus_thread"></div>        <script type="text/javascript">            var disqus_developer = 1;var disqus_shortname = 'eclipselinkdoc';              (function() {                var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;                dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';                (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);            })();        </script>        <noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>        <a href="http://disqus.com" class="dsq-brlink">Comments powered by <span class="logo-disqus">Disqus</span></a><!-- END: Disqus --></body>
</html>
